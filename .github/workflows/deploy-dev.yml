name: "development-deploy"
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: "eu-west-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  package:
    name: package artifacts (${{ matrix.environment }})
    runs-on: ubuntu-latest

    # Used for multi-environment setup
    strategy:
      matrix:
        include:
          - environment: dev

    env:
      ENV: ${{ matrix.environment }}
      STAGE: ${{ matrix.environment }}
      SLS_DEBUG: "*"
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js (v14)...
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: "https://npm.pkg.github.com/"

      - name: Install dependencies...
        run: npm install --ignore-scripts

      - name: Serverless Framework package...
        run: npx --no-install serverless package --stage=${{ matrix.environment }} --region=${{ env.AWS_DEFAULT_REGION }} --package=dist

      - name: Store package artifact...
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: dist/
          if-no-files-found: error

  deploy:
    name: deploy to ${{ matrix.environment }}
    runs-on: ubuntu-latest
    needs: [package]

    # Used for multi-environment setup
    strategy:
      matrix:
        include:
          - environment: dev

    environment:
      name: ${{ matrix.environment }}
    env:
      ENV: ${{ matrix.environment }}
      STAGE: ${{ matrix.environment }}
      SLS_DEBUG: "*"
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js (v14)...
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: "https://npm.pkg.github.com/"

      - name: Install dependencies...
        run: npm install --ignore-scripts

      - name: Retrieve package artifact...
        uses: actions/download-artifact@v2
        with:
          name: package
          path: dist

      - name: Serverless Framework deploy...
        run: npx --no-install serverless deploy --stage=${{ matrix.environment }} --region=${{ env.AWS_DEFAULT_REGION }} --package=dist